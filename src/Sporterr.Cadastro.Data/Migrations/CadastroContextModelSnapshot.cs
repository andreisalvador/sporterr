// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Sporterr.Cadastro.Data;

namespace Sporterr.Cadastro.Data.Migrations
{
    [DbContext(typeof(CadastroContext))]
    partial class CadastroContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Sporterr.Cadastro.Domain.Empresa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<string>("Cnpj")
                        .HasColumnType("text");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("DiasFuncionamento")
                        .HasColumnType("integer");

                    b.Property<TimeSpan>("HorarioAbertura")
                        .HasColumnType("interval");

                    b.Property<TimeSpan>("HorarioFechamento")
                        .HasColumnType("interval");

                    b.Property<string>("RazaoSocial")
                        .HasColumnType("text");

                    b.Property<Guid>("UsuarioProprietarioId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioProprietarioId");

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("Sporterr.Cadastro.Domain.Grupo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("NomeGrupo")
                        .HasColumnType("text");

                    b.Property<short>("NumeroMaximoMembros")
                        .HasColumnType("smallint");

                    b.Property<Guid>("UsuarioCriadorId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioCriadorId");

                    b.ToTable("Grupos");
                });

            modelBuilder.Entity("Sporterr.Cadastro.Domain.HistoricoSolicitacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.Property<Guid>("SolicitacaoId")
                        .HasColumnType("uuid");

                    b.Property<int>("StatusSolicitacao")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("SolicitacaoId");

                    b.ToTable("HistoricosSolicitacao");
                });

            modelBuilder.Entity("Sporterr.Cadastro.Domain.Quadra", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("EmManutencao")
                        .HasColumnType("boolean");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uuid");

                    b.Property<TimeSpan>("TempoLocacao")
                        .HasColumnType("interval");

                    b.Property<int>("TipoEsporteQuadra")
                        .HasColumnType("integer");

                    b.Property<decimal>("ValorPorTempoLocado")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.ToTable("Quadras");
                });

            modelBuilder.Entity("Sporterr.Cadastro.Domain.Solicitacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("LocacaoId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("QuadraId")
                        .HasColumnType("uuid");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.ToTable("Solicitacoes");
                });

            modelBuilder.Entity("Sporterr.Cadastro.Domain.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<Guid?>("GrupoId")
                        .HasColumnType("uuid");

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.Property<string>("Senha")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("GrupoId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Sporterr.Cadastro.Domain.Empresa", b =>
                {
                    b.HasOne("Sporterr.Cadastro.Domain.Usuario", "UsuarioProprietario")
                        .WithMany("Empresas")
                        .HasForeignKey("UsuarioProprietarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Sporterr.Cadastro.Domain.Grupo", b =>
                {
                    b.HasOne("Sporterr.Cadastro.Domain.Usuario", "UsuarioCriador")
                        .WithMany("Grupos")
                        .HasForeignKey("UsuarioCriadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Sporterr.Cadastro.Domain.HistoricoSolicitacao", b =>
                {
                    b.HasOne("Sporterr.Cadastro.Domain.Solicitacao", "Solicitacao")
                        .WithMany("Historicos")
                        .HasForeignKey("SolicitacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Sporterr.Cadastro.Domain.Quadra", b =>
                {
                    b.HasOne("Sporterr.Cadastro.Domain.Empresa", "Empresa")
                        .WithMany("Quadras")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Sporterr.Cadastro.Domain.Solicitacao", b =>
                {
                    b.HasOne("Sporterr.Cadastro.Domain.Empresa", "Empresa")
                        .WithMany("Solicitacoes")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Sporterr.Cadastro.Domain.Usuario", b =>
                {
                    b.HasOne("Sporterr.Cadastro.Domain.Grupo", null)
                        .WithMany("Membros")
                        .HasForeignKey("GrupoId");
                });
#pragma warning restore 612, 618
        }
    }
}
